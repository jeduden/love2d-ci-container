# Example GitHub Actions workflow for testing a Love2D game

name: Test Love2D Game

on:
  pull_request:
  push:
    branches:
      - main

jobs:
  test-game:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Run game and record video
        run: |
          mkdir -p output
          docker run --rm \
            -v ${{ github.workspace }}:/game \
            -v ${{ github.workspace }}/output:/output \
            ghcr.io/jeduden/love2d-ci-container:latest \
            /run-and-record.sh
      
      - name: Upload video and screenshots
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: game-recording
          path: output/
      
      - name: Display results in summary
        if: always()
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            let summary = '# ðŸŽ® Game Test Results\n\n';
            
            // Video info
            if (fs.existsSync('output/game-recording.mp4')) {
              const stats = fs.statSync('output/game-recording.mp4');
              const sizeMB = (stats.size / 1024 / 1024).toFixed(2);
              
              summary += '## ðŸŽ¬ Video Recording\n\n';
              summary += 'âœ… Game video captured successfully!\n\n';
              summary += `**File:** game-recording.mp4 (${sizeMB} MB)\n\n`;
              summary += 'ðŸ“¥ Download from artifacts above to watch\n\n';
            }
            
            // Screenshot info
            const files = fs.readdirSync('output').filter(f => f.endsWith('.png'));
            if (files.length > 0) {
              summary += `## ðŸ“¸ Screenshots\n\n`;
              summary += `âœ… Captured ${files.length} screenshot(s)\n\n`;
              summary += 'ðŸ“¥ Download from artifacts to view\n\n';
            }
            
            await core.summary.addRaw(summary).write();
      
      - name: Post to PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            
            let comment = '## ðŸŽ® Game Test Results\n\n';
            
            if (fs.existsSync('output/game-recording.mp4')) {
              const stats = fs.statSync('output/game-recording.mp4');
              const sizeMB = (stats.size / 1024 / 1024).toFixed(2);
              comment += `### ðŸŽ¬ Video Recording\n\nVideo captured (${sizeMB} MB)\n\n`;
            }
            
            const files = fs.readdirSync('output').filter(f => f.endsWith('.png'));
            if (files.length > 0) {
              comment += `### ðŸ“¸ Screenshots\n\nCaptured ${files.length} screenshot(s)\n\n`;
            }
            
            comment += 'ðŸ“¥ Download the **game-recording** artifact to view all outputs.';
            
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: comment
            });
