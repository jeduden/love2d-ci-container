name: Test Container

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          load: true
          tags: love2d-ci:test
          cache-from: type=gha
          cache-to: type=gha,mode=max
      
      - name: Test container with test game
        run: |
          docker run --rm \
            -v ${{ github.workspace }}/test-game:/game \
            love2d-ci:test
      
      - name: Test screenshot capture
        run: |
          mkdir -p screenshots
          docker run --rm \
            -v ${{ github.workspace }}/test-game:/game \
            -v ${{ github.workspace }}/screenshots:/output \
            love2d-ci:test \
            /run-and-screenshot.sh
      
      - name: Verify screenshots were created
        run: |
          echo "Checking for screenshots..."
          ls -lh screenshots/
          test $(ls -1 screenshots/*.png 2>/dev/null | wc -l) -gt 0 || (echo "No screenshots found!" && exit 1)
          echo "Screenshots created successfully!"
      
      - name: Upload screenshots and audio
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-game-screenshots
          path: screenshots/
          retention-days: 7
      
      - name: Display test results in summary
        if: always()
        run: |
          echo "# ðŸŽ® Love2D CI Test Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          # Audio test results
          if [ -f screenshots/audio-info.txt ]; then
            echo "## ðŸ”Š Audio Test" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            cat screenshots/audio-info.txt >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
          fi
          
          # Screenshots
          if [ -d screenshots ]; then
            PNG_COUNT=$(ls -1 screenshots/*.png 2>/dev/null | wc -l)
            if [ "$PNG_COUNT" -gt 0 ]; then
              echo "## ðŸ“¸ Screenshots" >> $GITHUB_STEP_SUMMARY
              echo "" >> $GITHUB_STEP_SUMMARY
              echo "âœ… Captured $PNG_COUNT screenshot(s):" >> $GITHUB_STEP_SUMMARY
              echo "" >> $GITHUB_STEP_SUMMARY
              for img in screenshots/*.png; do
                if [ -f "$img" ]; then
                  filename=$(basename "$img")
                  size=$(du -h "$img" | cut -f1)
                  echo "- **$filename** ($size)" >> $GITHUB_STEP_SUMMARY
                fi
              done
              echo "" >> $GITHUB_STEP_SUMMARY
              echo "ðŸ“¥ Download the **test-game-screenshots** artifact above to view all screenshots." >> $GITHUB_STEP_SUMMARY
            fi
          fi
      
      - name: Verify LuaJIT is available
        run: |
          docker run --rm love2d-ci:test luajit -v
      
      - name: Verify Luarocks is available
        run: |
          docker run --rm love2d-ci:test luarocks --version
      
      - name: Check image size
        run: |
          docker images love2d-ci:test --format "table {{.Repository}}\t{{.Tag}}\t{{.Size}}"
