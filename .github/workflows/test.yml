name: Test Container

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          load: true
          tags: love2d-ci:test
          cache-from: type=gha
          cache-to: type=gha,mode=max
      
      - name: Test container with test game
        run: |
          docker run --rm \
            -v ${{ github.workspace }}/test-game:/game \
            love2d-ci:test
      
      - name: Test screenshot capture
        run: |
          mkdir -p screenshots
          docker run --rm \
            -v ${{ github.workspace }}/test-game:/game \
            -v ${{ github.workspace }}/screenshots:/output \
            love2d-ci:test \
            /run-and-screenshot.sh
      
      - name: Verify screenshots were created
        run: |
          echo "Checking for screenshots..."
          ls -lh screenshots/
          test $(ls -1 screenshots/*.png 2>/dev/null | wc -l) -gt 0 || (echo "No screenshots found!" && exit 1)
          echo "Screenshots created successfully!"
      
      - name: Display test results in summary
        if: always()
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = require('path');
            
            let summary = '# ðŸŽ® Love2D CI Test Results\n\n';
            
            // Add audio test results
            const audioStatusPath = 'screenshots/audio-status.txt';
            if (fs.existsSync(audioStatusPath)) {
              const audioStatus = fs.readFileSync(audioStatusPath, 'utf8');
              summary += '## ðŸ”Š Audio Test Results\n\n';
              summary += '```\n' + audioStatus + '\n```\n\n';
            }
            
            // Add screenshots
            const screenshotDir = 'screenshots';
            if (fs.existsSync(screenshotDir)) {
              const files = fs.readdirSync(screenshotDir).filter(f => f.endsWith('.png')).sort();
              if (files.length > 0) {
                summary += '## ðŸ“¸ Screenshots\n\n';
                summary += `Found ${files.length} screenshot(s):\n\n`;
                
                for (const file of files) {
                  const content = fs.readFileSync(path.join(screenshotDir, file));
                  const base64 = content.toString('base64');
                  summary += `### ${file}\n`;
                  summary += `![${file}](data:image/png;base64,${base64})\n\n`;
                }
              }
            }
            
            await core.summary.addRaw(summary).write();
      
      - name: Upload screenshots
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-game-screenshots
          path: screenshots/
          retention-days: 7
      
      - name: Verify LuaJIT is available
        run: |
          docker run --rm love2d-ci:test luajit -v
      
      - name: Verify Luarocks is available
        run: |
          docker run --rm love2d-ci:test luarocks --version
      
      - name: Check image size
        run: |
          docker images love2d-ci:test --format "table {{.Repository}}\t{{.Tag}}\t{{.Size}}"
